---
name: build

on:
  push:
  release:
    types: [published, unpublished]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      CURL_CACHE_DIR: $HOME/.cache/curl
      PACKER_BUILD_REGION: us-east-2
      PACKER_DEPLOY_REGION_KMS_MAP: "us-east-1:alias/cool/ebs,
                                     us-east-2:alias/cool/ebs,
                                     us-west-1:alias/cool/ebs,
                                     us-west-2:alias/cool/ebs"
      PACKER_VERSION: 1.4.4
      TERRAFORM_VERSION: 0.12.10

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Setup cache # GitHub support coming soon
        run: mkdir -p $CURL_CACHE_DIR

      - name: Install Terraform
        run: |
          TERRAFORM_ZIP="terraform_${TERRAFORM_VERSION}_linux_amd64.zip"
          curl --output "${CURL_CACHE_DIR}/${TERRAFORM_ZIP}" \
            --time-cond "${CURL_CACHE_DIR}/${TERRAFORM_ZIP}" --location \
            "https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/${TERRAFORM_ZIP}"
          sudo unzip -d /opt/terraform "${CURL_CACHE_DIR}/${TERRAFORM_ZIP}"
          sudo ln -s /opt/terraform/terraform /usr/bin/terraform

      - name: Install Packer
        run: |
          PACKER_ZIP="packer_${PACKER_VERSION}_linux_amd64.zip"
          curl --output "${CURL_CACHE_DIR}/${PACKER_ZIP}" \
            --time-cond "${CURL_CACHE_DIR}/${PACKER_ZIP}" --location \
            "https://releases.hashicorp.com/packer/${PACKER_VERSION}/${PACKER_ZIP}"
          sudo unzip -o -d /usr/local/bin "${CURL_CACHE_DIR}/${PACKER_ZIP}"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade -r requirements-test.txt
          ansible-galaxy install --force --role-file src/requirements.yml

      - name: Run pre-commit on all files
        run: pre-commit run --all-files

      - name: Patch Packer configuration
        run: ./patch_packer_config.py query-github src/packer.json

      - name: Test Packer configuration
        run: |
          packer validate src/packer.json
          pytest

      - name: Create Machine Image
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: echo "Soon" #packer build --timestamp-ui src/packer.json
        # if github.event is release publish
